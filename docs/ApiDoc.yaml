# Разрабатывается на основе прошлого проекта

# Для быстрого использования:
#   - скопироватть код
#   - перейти на страницу https://editor.swagger.io/
#   - вставить код в левую область на экране

openapi: 3.0.2
info:
  title: 'meeco'
  version: ''
  description: 'Прекрасный магазин эко товаров'
paths:
  /api/v1/register/:

    post:
      operationId: Регистрация пользователя
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUserResponseOnCreate'
          description: 'Пользователь успешно создан'
        '400':
          $ref: '#/components/responses/ValidationError'
      tags:
        - Регистрация пользователя

  /api/v1/users/me/:
    get:
      operationId: Текущий пользователь
      description: ''
      parameters: []
      security:
        - Token: [ ]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '401':
          $ref: '#/components/responses/AuthenticationError'
      tags:
        - Пользователи
  /api/v1/users/set_password/:
    post:
      operationId: Изменение пароля
      description: 'Изменение пароля текущего пользователя'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
      responses:
        '204':
          description: 'Пароль успешно изменен'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
      tags:
        - Пользователи

  /api/v1/token/:
    post:
      operationId: Создание JWT
      description: Используйте эту конечную точку для получения JWT.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreateResponse'
          description: ''
        '401':
          $ref: '#/components/responses/AuthenticationError'
      tags:
        - Аутентификация пользователя JWT
  /api/v1/token/refresh/:
    post:
      operationId: Обновление JWT
      description: Используйте эту конечную точку для обновления JWT.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenUpdate'

      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenUpdateResponse'
          description: ''
        '401':
          $ref: '#/components/responses/AuthenticationError'
      tags:
        - Аутентификация пользователя JWT
  /api/v1/token/verify/:
    post:
      operationId: Проверка JWT
      description: Используйте эту конечную точку для проверки JWT.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'

      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
        '401':
          $ref: '#/components/responses/AuthenticationError'
      tags:
        - Аутентификация пользователя JWT

  /api/v1/categories/:
    get:
      operationId: Cписок категорий
      description: 'Доступно без авторизации'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
      tags:
        - Категории

  /api/v1/events/:
    get:
      operationId: Cписок акций
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
          description: ''
      tags:
        - Акции

  /api/v1/brands/:
    get:
      operationId: Cписок производителей
      description: 'Доступно без авторизации'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Brand'
          description: ''
      tags:
        - Производители

  /api/v1/products/:
    get:
      operationId: Список товаров
      description: Страница доступна всем пользователям
      parameters:
        - name: page
          required: false
          in: query
          description: Номер страницы.
          schema:
            type: integer
        - name: limit
          required: false
          in: query
          description: Количество объектов на странице.
          schema:
            type: integer
        - name: is_favorite
          required: false
          in: query
          description: Показывать только товары, находящиеся в списке избранного.
          schema:
            type: integer
            enum: [0, 1]
        - name: is_in_shopping_cart
          required: false
          in: query
          description: Показывать только товары, находящиеся в списке покупок.
          schema:
            type: integer
            enum: [0, 1]
        - name: event
          required: false
          in: query
          description: Показывать товары только с указанными акциями (по slug)
          example: 'novinki'
          schema:
            type: string
        - name: category
          required: false
          in: query
          description: Показывать товары только с указанными категориями (по slug)
          example: 'Eda_i_napitki'
          schema:
            type: string
        - name: brand
          required: false
          in: query
          description: Показывать товары только с указанными производителями (по slug)
          example: 'ecome'
          schema:
            type: string

      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                    description: 'Общее количество объектов в базе'
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://meeco.ru/api/v1/products/?page=4
                    description: 'Ссылка на следующую страницу'
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://meeco.ru/api/v1/products/?page=2
                    description: 'Ссылка на предыдущую страницу'
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductList'
                    description: 'Список объектов текущей страницы'
          description: ''
      tags:
        - Товары
  /api/v1/products/{id}/:
    get:
      operationId: Получение товара
      description: ''
      parameters:
        - name: id
          in: path
          required: true
          description: "Уникальный идентификатор этого товара"
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
        - Товары

  /api/v1/products/{id}/favorite/:
    post:
      operationId: Добавить продукт в избранное
      description: 'Доступно только авторизованному пользователю.'
      security:
        - Token: [ ]
      parameters:
        - name: id
          in: path
          required: true
          description: "Уникальный идентификатор этого товара"
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductMini'
          description: 'Товар успешно добавлен в избранное'
        '400':
          description: 'Ошибка добавления в избранное (Например, когда товар уже есть в избранном)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfMadeError'
        '401':
          $ref: '#/components/responses/AuthenticationError'

      tags:
        - Избранное
    delete:
      operationId: Удалить товар из избранного
      description: 'Доступно только авторизованным пользователям'
      security:
        - Token: [ ]
      parameters:
        - name: id
          in: path
          required: true
          description: "Уникальный идентификатор этого товара."
          schema:
            type: string
      responses:
        '204':
          description: 'Товар успешно удален из избранного'
        '400':
          description: 'Ошибка удаления из избранного (Например, когда товара там не было)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfMadeError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
      tags:
        - Избранное
        
  /api/v1/products/{id}/shopping_cart/:
    post:
      operationId: Добавить товар в избранное
      description: 'Доступно только авторизованному пользователю.'
      security:
        - Token: [ ]
      parameters:
        - name: id
          in: path
          required: true
          description: "Уникальный идентификатор этого товара"
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductMini'
          description: 'Товар успешно добавлен в корзину'
        '400':
          description: 'Ошибка добавления в корзину (Например, когда товар уже есть в избранном)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfMadeError'
        '401':
          $ref: '#/components/responses/AuthenticationError'

      tags:
        - Корзина
    patch:
      operationId: Обновление товара
      security:
        - Token: [ ]
      description: 'Доступно только авторизированному пользователю'
      parameters:
        - name: id
          in: path
          required: true
          description: "Уникальный идентификатор этого товара."
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductShoppingCartUpdate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductMini'
          description: 'Товар успешно обновлен'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Корзина
    delete:
      operationId: Удалить товар из корзины
      description: 'Доступно только авторизованным пользователям'
      security:
        - Token: [ ]
      parameters:
        - name: id
          in: path
          required: true
          description: "Уникальный идентификатор этого товара."
          schema:
            type: string
      responses:
        '204':
          description: 'Товар успешно удален из корзины'
        '400':
          description: 'Ошибка удаления из корзины (Например, когда товара там не было)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfMadeError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
      tags:
        - Корзина

  /api/v1/orders/:

    post:
      security:
        - Token: []
      operationId: Создание заказа
      description: 'Страница доступна только авторизованым пользователям'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderList'
          description: 'Заказ успешно создан'
        '400':
          description: 'Ошибки валидации в стандартном формате DRF'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          $ref: '#/components/schemas/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFound'
      tags:
        - Заказы
  /api/v1/orders/me/:
    get:
      operationId: Список заказов текущего пользователя
      description: Страница доступна только авторизованым пользователям
      parameters:
        - name: page
          required: false
          in: query
          description: Номер страницы.
          schema:
            type: integer
        - name: limit
          required: false
          in: query
          description: Количество объектов на странице.
          schema:
            type: integer

      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                    description: 'Общее количество объектов в базе'
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://meeco.ru/api/v1/orders/me/?page=4
                    description: 'Ссылка на следующую страницу'
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://meeco.ru/api/v1/orders/me/?page=2
                    description: 'Ссылка на предыдущую страницу'
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderMeList'
                    description: 'Список объектов текущей страницы'
          description: ''
      tags:
        - Заказы

components:
  schemas:
  
    Category:
      description: 'Категория'
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
          description: "Название"
          example: "Ванная комната"
        description:
          type: string
          maxLength: 255
          description: "Описание"
          example: "Товары для ванной комнаты"
        slug:
          type: string
          nullable: true
          maxLength: 200
          pattern: ^[-a-zA-Z0-9_]+$
          description: 'Уникальный слаг'
          example: 'bathroom'

# -------------Акции------------------------------
    Event:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
          description: 'Название'
          example: 'Скидки к 1 сентября!'
        description:
          type: string
          nullable: true
          maxLength: 255
          description: 'Описание'
          example: 'Воспользуйтесь уникальными скидками к 1 сентября!'
        image:
          description: 'Ссылка на картинку на сайте'
          example: 'http://meeco.example.org/media/events/images/image.jpeg'
          type: string
          format: url
        discount:
          type: integer
          description: 'Скидка на товар, %'
          example: '10'
        date_start:
          type: string
          format: date
          nullable: true
          description: 'Дата начала акции'
          example: "2012-05-20 00:17:43.939000"
        date_end:
          type: string
          format: date
          nullable: true
          description: 'Дата окончания акции'
          example: "2012-05-29 00:17:43.939000"
        slug:
          type: string
          nullable: true
          maxLength: 200
          pattern: ^[-a-zA-Z0-9_]+$
          description: 'Уникальный слаг'
          example: '1september'

# -------------Производители----------------------

    Brand:
      description: 'Производитель'
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
          description: "Название"
          example: "ЭкоФабрика"
        description:
          type: string
          maxLength: 255
          description: "Описание"
          example: "Лучший производитель эко товаров"
        country:
          type: string
          maxLength: 50
          description: "Страна бренда"
          example: "РОссия"
        slug:
          type: string
          nullable: true
          maxLength: 200
          pattern: ^[-a-zA-Z0-9_]+$
          description: 'Уникальный слаг'
          example: 'ecofactory'

# -------------Пользователи-----------------------

    User:
      description: 'Пользователь (В рецепте - автор рецепта)'
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
          description: "Адрес электронной почты"
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
          description: "Имя"
          example: "Вася"
        last_name:
          type: string
          maxLength: 150
          description: "Фамилия"
          example: "Пупкин"
        is_stuff:
          type: boolean
          readOnly: true
          description: "Является ли пользователь продавцом"
          example: True
      required:
        - email
    
    UserForOrder:
      description:  'Пользователь (В рецепте - автор рецепта)'
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
          description: "Адрес электронной почты"
        first_name:
          type: string
          maxLength: 150
          description: "Имя"
          example: "Вася"
        last_name:
          type: string
          maxLength: 150
          description: "Фамилия"
          example: "Пупкин"
      required:
        - email

    CustomUserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
          description: "Адрес электронной почты"
          example: "vpupkin@yandex.ru"
        first_name:
          type: string
          maxLength: 150
          description: "Имя"
          example: "Вася"
        last_name:
          type: string
          maxLength: 150
          description: "Фамилия"
          example: "Пупкин"
        password:
          type: string
          maxLength: 150
          description: "Пароль"
          example: "Qwerty123"
      required:
        - password
        - email
        - first_name
        - last_name

    CustomUserResponseOnCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
          description: "Адрес электронной почты"
          example: "vpupkin@yandex.ru"
        first_name:
          type: string
          maxLength: 150
          description: "Имя"
          example: "Вася"
        last_name:
          type: string
          maxLength: 150
          description: "Фамилия"
          example: "Пупкин"

    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
        - new_password
        - current_password
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        email:
          type: string
      required:
        - password
        - email
    TokenUpdate:
      type: object
      properties:
        refresh:
          type: string
      required:
        - refresh
    TokenVerify:
      type: object
      properties:
        access:
          type: string
      required:
        - access
    TokenCreateResponse:
      type: object
      properties:
        access:
          type: string
        refresh:
          type: string
    TokenUpdateResponse:
      type: object
      properties:
        access:
          type: string

# -------------Товары-----------------------------

    ImageSet:
      description: 'Изображения товара'
      type: object
      properties:
        big_image:
          description: 'Ссылка на картинку на сайте'
          example: "/media/CACHE/images/product_images/kandinsky-download-1685117115839/88e180f676d6993678048aa854b0b74f.jpg"
          type: string
          format: url
        preview_image:
          description: 'Ссылка на картинку на сайте'
          example: "/media/CACHE/product_images/CACHE\\images\\product_images\\kandinsky-download-1685117115839\\88e180f676d6993678048aa854b0b74f.jpg"
          type: string
          format: url
        image_thumbnail:
          description: 'Ссылка на картинку на сайте'
          example: "/media/CACHE/product_images/CACHE\\images\\product_images\\kandinsky-download-1685117115839\\1256cadf3567c07bc13538d3f62aa6db.jpg"
          type: string
          format: url

    Product:
      description: 'Данные о товаре'
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 30
          description: "Название"
          example: "Перчатка"
        description:
          type: string
          maxLength: 255
          description: "Описание"
          example: "Лучшая перчатка из экологичной резины"
        images:
          description: 'Ссылка на картинку на сайте'
          # example: 'http://meeco.example.org/media/products/image_1/image.jpeg'
          type: array
          items:
            $ref: '#/components/schemas/ImageSet'
        is_favorited:
          type: boolean
          description: 'Находится ли в избранном'
        is_in_shopping_cart:
          type: boolean
          description: 'Находится ли в корзине'
        category:
          type: integer
          description: "Категория"
          example: 33
        brand:
          type: string
          description: "Производитель"
          example: 'Экополис'
        event:
          type: integer
          description: "Акция в которой участвует товар"
          example: 12
        price_per_unit:
          type: integer
          description: "Цена за единицу"
          example: 1200
        amount:
          type: integer
          description: "Количество"
          example: 3
    
    ProductList:
      description: 'Данные о товаре'
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 30
          description: "Название"
          example: "Перчатка"
        description:
          type: string
          maxLength: 255
          description: "Описание"
          example: "Лучшая перчатка из экологичной резины"
        preview_image:
          description: 'Ссылка на картинку на сайте'
          example: "/media/CACHE/product_images/CACHE\\images\\product_images\\kandinsky-download-1685117115839\\88e180f676d6993678048aa854b0b74f.jpg"
          type: string
          format: url
        image_thumbnail:
          description: 'Ссылка на картинку на сайте'
          example: "/media/CACHE/product_images/CACHE\\images\\product_images\\kandinsky-download-1685117115839\\1256cadf3567c07bc13538d3f62aa6db.jpg"
          type: string
          format: url
        is_favorited:
          type: boolean
          description: 'Находится ли в избранном'
        is_in_shopping_cart:
          type: boolean
          description: 'Находится ли в корзине'
        category:
          type: integer
          description: "Категория"
          example: 33
        brand:
          type: string
          description: "Производитель"
          example: 'Экополис'
        event:
          type: integer
          description: "Акция в которой участвует товар"
          example: 12
        price_per_unit:
          type: integer
          description: "Цена за единицу"
          example: 1200
        amount:
          type: integer
          description: "Количество"
          example: 3
          
    ProductMini:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 30
          description: "Название"
          example: "Перчатка"
        is_in_shopping_cart:
          type: boolean
          description: 'Находится ли в корзине'
        category:
          type: integer
          description: "Категория"
          example: 33
        brand:
          type: string
          description: "Производитель"
          example: 'Экополис'
        event:
          type: integer
          description: "Акция в которой участвует товар"
          example: 12
        price_per_unit:
          type: integer
          description: "Цена за единицу"
          example: 1200
        amount:
          type: integer
          description: "Количество"
          example: 3
          
    ProducForOrder:
      description: 'Данные о товаре'
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 30
          description: "Название"
          example: "Перчатка"
        image_thumbnail:
          description: 'Ссылка на картинку на сайте'
          example: "/media/CACHE/product_images/CACHE\\images\\product_images\\kandinsky-download-1685117115839\\1256cadf3567c07bc13538d3f62aa6db.jpg"
          type: string
          format: url
        category:
          type: integer
          description: "Категория"
          example: 33
        brand:
          type: string
          description: "Производитель"
          example: 'Экополис'
        event:
          type: integer
          description: "Акция в которой участвует товар"
          example: 12
        price_per_unit:
          type: integer
          description: "Цена за единицу"
          example: 1200
        amount:
          type: integer
          description: "Количество"
          example: 3
          
    ProducForOrderMe:
      description: 'Данные о товаре'
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 30
          description: "Название"
          example: "Перчатка"
        image_thumbnail:
          description: 'Ссылка на картинку на сайте'
          example: "/media/CACHE/product_images/CACHE\\images\\product_images\\kandinsky-download-1685117115839\\1256cadf3567c07bc13538d3f62aa6db.jpg"
          type: string
          format: url
        brand:
          type: string
          description: "Производитель"
          example: 'Экополис'
        amount:
          type: integer
          description: "Количество"
          example: 3
        
    ProductShoppingCartUpdate:
      type: object
      properties:
        amount:
          type: integer
          description: "Количество"
          example: 3
      required:
        - amount

# -------------Заказы-------------------------

    OrderList:
      description: 'Данные о товаре'
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          type: string
          maxLength: 50
          description: "Статус заказа"
          example: "Собирается"
        comment:
          type: string
          maxLength: 255
          description: "Коментарий к заказу"
          example: "Хочу доставку после 18:00"
        price_total:
          type: integer
          description: "Цена заказа"
          example: 12500
        customer:
          description: 'Заказчик'
          items:
            $ref: '#/components/schemas/UserForOrder'
        article_number:
          type: integer
          description: "Артикул заказа"
          example: 12
        contact_phone_number:
          type: string
          maxLength: 20
          description: "Номер телефона"
          example: "+79354987523"
        delivery_address:
          type: string
          maxLength: 255
          description: "Адресс одной строкой"
          example: "603005, г. Нижний Новгород, пл. Минина и Пожарского, д.5 (вход в арке)"
        products:
          description: 'Список товаров'
          type: array
          items:
            $ref: '#/components/schemas/ProducForOrder'

    OrderMeList:
      description: 'Данные о товаре'
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          type: string
          maxLength: 50
          description: "Статус заказа"
          example: "Собирается"
        comment:
          type: string
          maxLength: 255
          description: "Коментарий к заказу"
          example: "Хочу доставку после 18:00"
        price_total:
          type: integer
          description: "Цена заказа"
          example: 12500
        article_number:
          type: integer
          description: "Артикул заказа"
          example: 12
        contact_phone_number:
          type: string
          maxLength: 20
          description: "Номер телефона"
          example: "+79354987523"
        delivery_address:
          type: string
          maxLength: 255
          description: "Адресс одной строкой"
          example: "603005, г. Нижний Новгород, пл. Минина и Пожарского, д.5 (вход в арке)"
        products:
          description: 'Список товаров'
          type: array
          items:
            $ref: '#/components/schemas/ProducForOrderMe'

    OrderCreate:
      description: 'Данные о товаре'
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        comment:
          type: string
          maxLength: 255
          description: "Коментарий к заказу"
          example: "Хочу доставку после 18:00"
        contact_phone_number:
          type: string
          maxLength: 20
          description: "Номер телефона"
          example: "+79354987523"
        delivery_address:
          type: string
          maxLength: 255
          description: "Адресс одной строкой"
          example: "603005, г. Нижний Новгород, пл. Минина и Пожарского, д.5 (вход в арке)"
      required:
        - customer
        - contact_phone_number
        - delivery_adresess

# ---------------------------------------

    ValidationError:
      description: Стандартные ошибки валидации DRF
      type: object
      properties:
        field_name:
          description: 'Название поля, в котором произошли ошибки. Таких полей может быть несколько'
          example: [ 'Обязательное поле.' ]
          type: array
          items:
            type: string

    SelfMadeError:
      description: Ошибка
      type: object
      properties:
        errors:
          description: 'Описание ошибки'
          type: string

    AuthenticationError:
      description: Пользователь не авторизован
      type: object
      properties:
        detail:
          description: 'Описание ошибки'
          example: "Учетные данные не были предоставлены."
          type: string

    PermissionDenied:
      description: Недостаточно прав
      type: object
      properties:
        detail:
          description: 'Описание ошибки'
          example: "У вас недостаточно прав для выполнения данного действия."
          type: string
    NotFound:
      description: Объект не найден
      type: object
      properties:
        detail:
          description: 'Описание ошибки'
          example: "Страница не найдена."
          type: string

  responses:
    ValidationError:
      description: 'Ошибки валидации в стандартном формате DRF'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'

    AuthenticationError:
      description: Пользователь не авторизован
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticationError'

    PermissionDenied:
      description: Недостаточно прав
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PermissionDenied'

    NotFound:
      description: Объект не найден
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFound'


  securitySchemes:
    Token:
      description: 'Авторизация по токену. <br>
      Все запросы от имени пользователя должны выполняться с заголовком "Authorization: Token TOKENVALUE"'
      type: http
      scheme: token
